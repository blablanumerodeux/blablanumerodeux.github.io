<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Damien LAMBLA</title>
    <link>https://blablanumerodeux.github.io/</link>
    <description>Recent content on Damien LAMBLA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Aug 2019 20:53:32 -0400</lastBuildDate>
    
	<atom:link href="https://blablanumerodeux.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HUGO</title>
      <link>https://blablanumerodeux.github.io/posts/hugo/deploy/</link>
      <pubDate>Sat, 17 Aug 2019 20:53:32 -0400</pubDate>
      
      <guid>https://blablanumerodeux.github.io/posts/hugo/deploy/</guid>
      <description>HUGO create a new site hugo new site me
install theme go here minimal and follow the instructions:
git submodule add https://github.com/calintat/minimal.git themes/minimal git submodule init git submodule update git submodule update --remote themes/minimal cp themes/minimal/exampleSite/config.toml  in the file config.toml set all your params, and:
baseurl = &amp;quot;http://examplesite&amp;quot; &amp;lt;- Change to https://yourgithubusername.github.io  push on your github On branch master you have the public folder (built version)
And on the hugo branch you put the hugo project</description>
    </item>
    
    <item>
      <title>Secrets and properties management</title>
      <link>https://blablanumerodeux.github.io/posts/properties-files-and-secrets-managers/</link>
      <pubDate>Sat, 17 Aug 2019 20:53:32 -0400</pubDate>
      
      <guid>https://blablanumerodeux.github.io/posts/properties-files-and-secrets-managers/</guid>
      <description>Secrets and properties management Properties files with Spring boot Specify different profiles (for the different DB for example) like this in the default application.properties file:
spring.profiles.active=local  or at runtime like that:
java -Dspring.profiles.active=local -jar yourApplication.jar  It will automatically take the corresponding properties file in the classpath application-local.propertie
Secrets with Spring boot When you have to specify a secret, just define a placeholder instead:
spring.datasource.password=${db-password}  and pass the value at runtime with a Java -D variable:</description>
    </item>
    
    <item>
      <title>Some of my projects</title>
      <link>https://blablanumerodeux.github.io/posts/my-first-post/</link>
      <pubDate>Sat, 17 Aug 2019 20:53:32 -0400</pubDate>
      
      <guid>https://blablanumerodeux.github.io/posts/my-first-post/</guid>
      <description>https://lambla.eu/static-laverna/
https://webdav.lambla.eu/webdav/
http://home.lambla.eu/
http://dakar.lambla.eu/
https://homeless.lambla.eu:9090/swagger-ui.html#/</description>
    </item>
    
  </channel>
</rss>